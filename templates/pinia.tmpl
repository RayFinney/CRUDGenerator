import { defineStore } from 'pinia'
import axios from 'axios'

export const use{{ .PackageVarTitle }}Store = defineStore({
  id: '{{ .PackageVarLower }}',
  state: () => ({
    {{ .PackageVarLower }}: {},
    {{ .PackageVarLower }}s: [],
    error: null,
    loading: false,
    submitting: false
  }),
  actions: {
    get(id) {
      this.loading = true
      this.error = null
      axios.get(`/api/v1/{{ .PackageVarLower }}s/${id}`)
        .then(response => {
          this.{{ .PackageVarLower }} = response.data
        })
        .catch(err => {
          console.debug(err)
          this.error = err?.message
          this.{{ .PackageVarLower }} = {}
        })
        .finally(() => {
          this.loading = false
        })
    },
    fetch() {
      this.loading = true
      this.error = null
      axios.get('/api/v1/{{ .PackageVarLower }}s')
        .then(response => {
          this.{{ .PackageVarLower }}s = response.data
        })
        .catch(err => {
          console.debug(err)
          this.error = err?.message
          this.{{ .PackageVarLower }}s = []
        })
        .finally(() => {
          this.loading = false
        })
    },
    store({{ .PackageVarLower }}) {
      this.submitting = true
      this.error = null
      axios.post('/api/v1/{{ .PackageVarLower }}s', {{ .PackageVarLower }})
        .then(response => {
          this.{{ .PackageVarLower }} = response.data
          this.{{ .PackageVarLower }}s.push(response.data)
        })
        .catch(err => {
          console.debug(err)
          this.error = err?.message
        })
        .finally(() => {
          this.submitting = false
        })
    },
    update(id, {{ .PackageVarLower }}) {
      this.submitting = true
      this.error = null
      axios.put(`/api/v1/{{ .PackageVarLower }}s/${id}`, {{ .PackageVarLower }})
        .then(response => {
          this.{{ .PackageVarLower }} = response.data
          const sIndex = this.{{ .PackageVarLower }}s.find(s => s.id === id)
          if (sIndex >= 0) {
            this.{{ .PackageVarLower }}s[sIndex] = response.data
          }
        })
        .catch(err => {
          console.debug(err)
          this.error = err?.message
        })
        .finally(() => {
          this.submitting = false
        })
    },
    delete(id) {
      this.submitting = true
      this.error = null
      axios.delete(`/api/v1/{{ .PackageVarLower }}s/${id}`)
        .then(() => {
          this.{{ .PackageVarLower }}s = this.{{ .PackageVarLower }}s.filter(s => s.id !== id)
        })
        .catch(err => {
          console.debug(err)
          this.error = err?.message
        })
        .finally(() => {
          this.submitting = false
        })
    }
  }
})

package utility

// THIS FILE IS AUTO GENERATED DO NOT CHANGE!

import (
	"errors"
	"github.com/jackc/pgx/v5"
	"github.com/labstack/echo/v4"
	"net/http"
)

var (
	ErrInvalidLogin            = errors.New("ErrInvalidLogin")
	ErrNotFound                = errors.New("NOT_FOUND")
	ErrUnauthorized            = errors.New("ErrUnauthorized")
	ErrForbidden               = errors.New("ErrForbidden")
	ErrUserNotFound            = errors.New("USER_NOT_FOUND")
	ErrSystemError             = errors.New("SYSTEM_ERROR")
	ErrSystemTempError         = errors.New("SYSTEM_TEMP_ERROR")
	ErrSSOError                = errors.New("SSO_ERROR")
	ErrSSOTempError            = errors.New("SSO_TEMP_ERROR")
	ErrDatabaseError           = errors.New("DATABASE_ERROR")
	ErrInvalidInput            = errors.New("INVALID_INPUT")
	ErrConflict                = errors.New("ErrConflict")
	ErrInvalidFileExtension    = errors.New("INVALID_FILE_EXTENSION")
	ErrFileError               = errors.New("FILE_ERROR")
	ErrInvalidPassword         = errors.New("INVALID_PASSWORD")
	ErrInvalidEmail            = errors.New("INVALID_EMAIL")
	ErrConfirmPasswordRequired = errors.New("CONFIRM_PASSWORD_REQUIRED")
	ErrInvalidConfirmPassword  = errors.New("INVALID_CONFIRM_PASSWORD")
)

func HandleDeliveryErrors(ctx echo.Context, err error) error {
	switch err {
	case ErrNotFound, pgx.ErrNoRows:
		return ctx.NoContent(http.StatusNotFound)
	case ErrUnauthorized:
		return ctx.NoContent(http.StatusUnauthorized)
	case ErrForbidden:
		return ctx.NoContent(http.StatusForbidden)
	default:
		return ctx.String(http.StatusInternalServerError, err.Error())
	}
}
